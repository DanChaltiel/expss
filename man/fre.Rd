% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fre.R
\name{fre}
\alias{cro}
\alias{cro_cpct}
\alias{cro_rpct}
\alias{cro_tpct}
\alias{fre}
\title{Simple frequencies and crosstabs with support of labels, weights and multiple response variables.}
\usage{
fre(x, weight = NULL)

cro(x, predictor, weight = NULL)

cro_cpct(x, predictor, weight = NULL)

cro_rpct(x, predictor, weight = NULL)

cro_tpct(x, predictor, weight = NULL)
}
\arguments{
\item{x}{vector/data.frame. data.frames are considered as multiple response
variables.}

\item{weight}{numeric vector. Optional case weights. NA's and negative weights
treated as zero weights.}

\item{predictor}{vector. By now multiple-response predictor is not supported.}
}
\value{
data.frame
}
\description{
\code{fre} returns data.frame with six columns: labels or values, counts, 
valid percent (excluding NA), percent (with NA), percent of responses(for 
single-column \code{x} it equals to valid percent) and cumulative percent of 
responses.
\code{cro} returns data.frame with counts (possibly weighted) with column and
row totals.
\code{cro_pct}, \code{cro_cpct}, \code{cro_rpct} return data.frame with 
table/column/row percent with column and row totals. There are always 
weighted counts instead of margin with 100\%. Empty labels/factor levels are 
removed from results of these functions. Base for multiple response (x is 
data.frame) percent is number of valid cases (not sum of responses) so sum of
percent may be greater than 100. Case is considered as valid if it has at
least one non-NA value.
}
\examples{
data(mtcars)
mtcars = modify(mtcars,{
    var_lab(vs) = "Engine"
    val_lab(vs) = c("V-engine" = 0, 
                    "Straight engine" = 1) 
    var_lab(am) = "Transmission"
    val_lab(am) = c(automatic = 0, 
                    manual=1)
})

fre(mtcars$vs)
with(mtcars, cro(am, vs))
with(mtcars, cro_cpct(am, vs))

# multiple-choise variable
# brands - multiple response question
# Which brands do you use during last three months? 
set.seed(123)
brands = data.frame(t(replicate(20,sample(c(1:5,NA),4,replace = FALSE))))
# score - evaluation of tested product
score = sample(-1:1,20,replace = TRUE)
var_lab(brands) = "Used brands"
val_lab(brands) = make_labels("
                              1 Brand A
                              2 Brand B
                              3 Brand C
                              4 Brand D
                              5 Brand E
                              ")

var_lab(score) = "Evaluation of tested brand"
val_lab(score) = make_labels("
                             -1 Dislike it
                             0 So-so
                             1 Like it    
                             ")

fre(brands)
cro(brands, score)
cro_cpct(brands, score)
}

